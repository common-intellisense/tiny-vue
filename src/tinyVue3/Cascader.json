{
  "name": "TinyCascader",
  "tag": "级联选择器",
  "props": {
    "before-filter": {
      "default": "--",
      "value": "",
      "type": "(value: string) => boolean | Promise",
      "description": "If the hook before filtering is the input value, if it returns false or returns a Promise and is rejected, the filter will be stopped",
      "description_zh": "筛选之前的钩子，参数为输入的值，若返回 false 或者返回 Promise 且被 reject，则停止筛选"
    },
    "blank": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "shape='filter', and the background of the filter mode is set to transparent",
      "description_zh": "shape='filter' 时生效，设置过滤器模式背景为透明"
    },
    "clearable": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether the purge option is supported",
      "description_zh": "是否支持清空选项"
    },
    "collapse-tags": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether to fold the tag in multi-select mode",
      "description_zh": "多选模式下是否折叠 Tag"
    },
    ":debounce": {
      "default": "300",
      "value": "",
      "type": "number",
      "description": "The debounce delay of the search keyword input, in milliseconds",
      "description_zh": "搜索关键词输入的去抖延迟，单位毫秒"
    },
    "disabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether to disable or not",
      "description_zh": "是否禁用"
    },
    "filter-method": {
      "default": "--",
      "value": "",
      "type": "(node: ICascaderPanelNode, keyword: string) => boolean",
      "description": "Customize the search logic, the first parameter is node, and the second parameter is the search keyword keyword, which returns a boolean value to indicate whether it is hit",
      "description_zh": "自定义搜索逻辑，第一个参数是节点 node，第二个参数是搜索关键词 keyword，通过返回布尔值表示是否命中"
    },
    "filterable": {
      "default": "--",
      "value": "",
      "type": "boolean",
      "description": "Whether the option is searchable",
      "description_zh": "是否可搜索选项"
    },
    "label": {
      "default": "--",
      "value": "",
      "type": "string",
      "description": "shape='filter', and the label can be passed to display the title",
      "description_zh": "shape='filter' 时生效，可传入 label 显示标题"
    },
    "v-model": {
      "default": "--",
      "value": "",
      "type": "ICascaderPanelNodePropValue",
      "description": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定",
      "description_zh": "选中项绑定值, 其类型由 props.multiple、props.emitPath 共同决定",
      "required": true
    },
    ":options": {
      "default": "--",
      "value": "",
      "type": "ICascaderPanelData[]",
      "description": "Optional data sources, key names configurable via the Props property",
      "description_zh": "可选项数据源，键名可通过 Props 属性配置",
      "required": true
    },
    "placeholder": {
      "default": "请选择",
      "value": "",
      "type": "string",
      "description": "Input box placeholder text",
      "description_zh": "输入框占位文本"
    },
    "popper-append-to-body": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Whether to insert a popover into the body element. If there is a problem with the positioning of the pop-up, you can set this property to false (see Select Component)",
      "description_zh": "是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false (可参考 select 组件)"
    },
    "popper-class": {
      "default": "--",
      "value": "",
      "type": "string",
      "description": "Add a class name to the popper (see popover component)",
      "description_zh": "为 popper 添加类名(可参考 popover 组件)"
    },
    "props": {
      "default": "--",
      "value": "",
      "type": "ICascaderPanelConfig",
      "description": "Configuration options, see the ICascaderPanelConfig table",
      "description_zh": "配置选项，具体见 ICascaderPanelConfig 表"
    },
    "separator": {
      "default": "/",
      "value": "",
      "type": "string",
      "description": "Option separator",
      "description_zh": "选项分隔符"
    },
    "shape": {
      "default": "--",
      "value": "",
      "type": "filter",
      "description": "Switch to filter mode via the shape='filter' property",
      "description_zh": "通过 shape='filter' 属性切换至过滤器模式"
    },
    "show-all-levels": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Whether or not to display the full path of the selected value in the input box",
      "description_zh": "输入框中是否显示选中值的完整路径"
    },
    "size": {
      "default": "--",
      "value": "",
      "type": "medium / small / mini",
      "description": "size",
      "description_zh": "尺寸"
    },
    "tip": {
      "default": "--",
      "value": "",
      "type": "string",
      "description": "shape='filter', you can pass in a tip to display a prompt message",
      "description_zh": "shape='filter' 时生效，可传入 tip 显示提示信息"
    }
  },
  "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader",
  "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/cascader",
  "typeDetail": {
    "ICascaderPanelNodeValue": "type ICascaderPanelNodeValue = string | number",
    "ICascaderPanelNodePropValue": "type ICascaderPanelNodePropValue =\n  | ICascaderPanelNodeValue\n  | ICascaderPanelNodeValue[]\n  | ICascaderPanelNodeValue[][]",
    "ICascaderPanelData": "type ICascaderPanelData = {\n  value?: ICascaderPanelNodeValue\n  label?: string\n  children?: ICascaderPanelData[]\n  disabled?: boolean\n  leaf?: boolean\n  [key: string]: ICascaderPanelNodeValue | ICascaderPanelData[] | string | boolean | undefined\n}",
    "ICascaderPanelConfig": "interface ICascaderPanelConfig {\n  emitPath: boolean\n  expandTrigger: 'click' | 'hover'\n  hoverThreshold: number\n  checkStrictly?: boolean\n  multiple?: boolean\n  lazy: boolean\n  lazyLoad: (\n    node: ICascaderPanelNode,\n    resolve: (dataList: ICascaderPanelData[]) => void\n  ) => void\n  value: string\n  label: string\n  children: string\n  disabled: string\n  leaf: string\n}",
    "ICascaderPanelNode": "type ICascaderPanelNode = {\n  parent: ICascaderPanelNode | null\n  level: number\n  data: ICascaderPanelData\n  config: ICascaderPanelConfig\n  uid: number\n  value: ICascaderPanelNodeValue\n  label: string\n  pathNodes: Node[]\n  path: ICascaderPanelNodeValue[]\n  pathLabels: string[]\n  loaded: boolean\n  loading: boolean\n  hasChildren: boolean\n  children: Node[]\n  checked?: boolean\n  indeterminate?: boolean\n  root?: boolean\n}",
    "ICascaderPanelLazyLoad": "type ICascaderPanelLazyLoad = (node: ICascaderPanelNode, resolve: (dataList: ICascaderPanelData[]) => void) => void"
  },
  "events": [
    {
      "name": "blur",
      "description": "Triggers when focus is lost",
      "description_zh": "当失去焦点时触发",
      "params": "(event: FocusEvent) => void",
      "value": ""
    },
    {
      "name": "change",
      "description": "Triggered when a node is selected",
      "description_zh": "当选中节点变化时触发",
      "params": "(value: ICascaderPanelNodePropValue) => void",
      "value": ""
    },
    {
      "name": "expand-change",
      "description": "Triggered when the expansion node changes",
      "description_zh": "当展开节点发生变化时触发",
      "params": "(value: ICascaderPanelNodeValue[]) => void",
      "value": ""
    },
    {
      "name": "focus",
      "description": "Triggers when focus is gained",
      "description_zh": "当获得焦点时触发",
      "params": "(event: FocusEvent) => void",
      "value": ""
    },
    {
      "name": "remove-tag",
      "description": "In multi-select mode, it is triggered when the tag is removed",
      "description_zh": "在多选模式下，移除Tag时触发",
      "params": "(removeValue: ICascaderPanelNodeValue[]) => void",
      "value": ""
    },
    {
      "name": "visible-change",
      "description": "Triggered when the drop-down box appears/hides",
      "description_zh": "下拉框出现/隐藏时触发",
      "params": "(visible: boolean) => void",
      "value": ""
    }
  ],
  "methods": [
    {
      "name": "getCheckedNodes",
      "description": "Gets the selected node",
      "params": "(leafOnly: boolean = false) => ICascaderPanelNode[]",
      "description_zh": "获取选中的节点",
      "value": ""
    }
  ],
  "slots": [
    {
      "name": "default",
      "description": "自定义备选项的节点内容,参数为 { node: ICascaderPanelNode, data: ICascaderPanelData },分别为当前节点的 Node 对象和数据",
      "description_zh": "自定义备选项的节点内容,参数为 { node: ICascaderPanelNode, data: ICascaderPanelData },分别为当前节点的 Node 对象和数据"
    },
    {
      "name": "empty",
      "description": "What to do when there are no matching options",
      "description_zh": "无匹配选项时的内容"
    },
    {
      "name": "no-data",
      "description": "Set what is displayed when there is no data via the no-data slot",
      "description_zh": "通过 no-data 插槽设置没有数据时显示的内容"
    }
  ],
  "filename": "Cascader",
  "description": "当一个数据集合有清晰的层级结构时，可通过级联选择器逐级查看并选择。",
  "description_zh": "当一个数据集合有清晰的层级结构时，可通过级联选择器逐级查看并选择。"
}
