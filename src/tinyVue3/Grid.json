{
  "name": "TinyGrid",
  "tag": "表格",
  "props": {
    "align": {
      "default": "left",
      "value": "",
      "type": "left / center / right",
      "description": "The alignment of all table columns",
      "description_zh": "所有表格列的对齐方式"
    },
    "auto-load": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Whether to enable the automatic request service is valid when fetch-data is configured",
      "description_zh": "是否开启自动请求服务，配置 fetch-data 时有效"
    },
    "auto-resize": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Parent Responsive Listening (may be used in scenarios where the parent element may be dynamically changing)",
      "description_zh": "父元素响应式监听（对于父元素可能存在动态变化的场景可能会用到）"
    },
    "border": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether or not it comes with a longitudinal border",
      "description_zh": "是否带有纵向边框"
    },
    "cell-class-name": {
      "default": "--",
      "value": "",
      "type": "string | (args: IClassNameArgs) => string",
      "description": "Append a className to a cell, which can also be a function",
      "description_zh": "给单元格附加 className，也可以是函数"
    },
    "column-key": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether the key property needs to be set for each column's VNode (not required unless in special cases)",
      "description_zh": "是否需要为每一列的 VNode 设置 key 属性（非特殊情况下不需要使用）"
    },
    "column-min-width": {
      "default": "--",
      "value": "",
      "type": "number | string",
      "description": "Set the minimum width that can be adjusted, and when not set, it defaults to the width of the column header span + 36 (fixed width of the header); All minimum column widths; The remaining space is automatically proportionalized; The optional value for this property is integer, px,%",
      "description_zh": "设置可以调整到的最小宽度，不设置时默认为列头 span 的宽度 + 36（头部固定宽度） ；所有最小列宽度；会自动将剩余空间按比例分配；该属性的可选值为 整数, px，%"
    },
    "column-width": {
      "default": "--",
      "value": "",
      "type": "number | string",
      "description": "All column widths; The optional value for this property is integer, px,%",
      "description_zh": "所有列宽度；该属性的可选值为 整数, px，%"
    },
    "columns": {
      "default": "--",
      "value": "",
      "type": "IColumnConfig[]",
      "description": "For details about the configuration information of table columns, see Column configuration items",
      "description_zh": "表格列的配置信息，具体参考列配置项"
    },
    "context-menu": {
      "default": "--",
      "value": "",
      "type": "IContextMenuConfig",
      "description": "Quick menu configuration item",
      "description_zh": "快捷菜单配置项"
    },
    "data": {
      "default": "--",
      "value": "",
      "type": "Row[]",
      "description": "Set the data for the table",
      "description_zh": "设置表格的数据"
    },
    "delete-data": {
      "default": "--",
      "value": "",
      "type": "IDataHandler",
      "description": "Server-side data deletion method",
      "description_zh": "服务端数据删除方法"
    },
    "drop-config": {
      "default": "--",
      "value": "",
      "type": "IDropConfig",
      "description": "Drag and drop configuration items from the table",
      "description_zh": "表格拖拽配置项"
    },
    "edit-config": {
      "default": "--",
      "value": "",
      "type": "IEditConfig",
      "description": "Edit configuration items in a table",
      "description_zh": "表格编辑配置项"
    },
    "edit-rules": {
      "default": "--",
      "value": "",
      "type": "IValidRules",
      "description": "Verify the rule configuration item",
      "description_zh": "校验规则配置项"
    },
    "events": {
      "default": "--",
      "value": "",
      "type": "IEventsConfig",
      "description": "Event objects",
      "description_zh": "事件对象"
    },
    "expand-config": {
      "default": "--",
      "value": "",
      "type": "IExpandConfig",
      "description": "Expand the row configuration item",
      "description_zh": "展开行配置项"
    },
    "fetch-data": {
      "default": "--",
      "value": "",
      "type": "IDataHandler",
      "description": "Server-side data query method",
      "description_zh": "服务端数据查询方法"
    },
    "fit": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Whether the widths of all columns are self-stretching",
      "description_zh": "所有列的宽度是否自撑开"
    },
    "footer-align": {
      "default": "left",
      "value": "",
      "type": "left / center / right",
      "description": "The alignment of all the columns at the end of the table",
      "description_zh": "所有的表尾列的对齐方式"
    },
    "footer-cell-class-name": {
      "default": "--",
      "value": "",
      "type": "string | (args: IClassNameArgs) => string",
      "description": "Append className to the cells in the footer, which can also be a function",
      "description_zh": "给表尾的单元格附加 className，也可以是函数"
    },
    "footer-method": {
      "default": "--",
      "value": "",
      "type": "({columns: IColumnConfig[], data: IRow[]}) => string[][]",
      "description": "Calculation method of the total in the footer columns: all column configuration data, data: all current table data",
      "description_zh": "表尾合计的计算方法 columns:所有的列配置数据, data： 当前所有的表格数据"
    },
    "footer-row-class-name": {
      "default": "--",
      "value": "",
      "type": "string | (args: IClassNameArgs) => string",
      "description": "给表尾的行附加 className",
      "description_zh": "给表尾的行附加 className"
    },
    "footer-span-method": {
      "default": "--",
      "value": "",
      "type": "(args: ISpanMethodArgs) => { rowspan: number, colspan: number }",
      "description": "表尾合并行或列，该函数返回计算后的值；通过 footer-method 和 footer-span-method 设置表尾合计行或列逻辑 必须配置 show-footer",
      "description_zh": "表尾合并行或列，该函数返回计算后的值；通过 footer-method 和 footer-span-method 设置表尾合计行或列逻辑 必须配置 show-footer"
    },
    "header-align": {
      "default": "left",
      "value": "",
      "type": "left / center / right",
      "description": "The alignment of all header columns",
      "description_zh": "所有的表头列的对齐方式"
    },
    "header-cell-class-name": {
      "default": "--",
      "value": "",
      "type": "string | (args: IClassNameArgs) => string",
      "description": "Append className to the cells in the header, which can also be a function",
      "description_zh": "给表头的单元格附加 className，也可以是函数"
    },
    "header-row-class-name": {
      "default": "--",
      "value": "",
      "type": "string | (args: IClassNameArgs) => string",
      "description": "The row in the header is appended to the className, which can also be a function",
      "description_zh": "表头的行附加 className，也可以是函数"
    },
    "height": {
      "default": "--",
      "value": "",
      "type": "number | string",
      "description": "Sets the height of the table content area (excluding the table header and bottom). When not set, the height of the table content area is adaptive; the height of the table; It supports the full coverage of the parent container or fixed width and height; The optional value for this property is integer, px,%",
      "description_zh": "设置表格内容区域（不含表格头部，底部）的高度。 不设置时，表格内容区域的高度度自适应；表格的高度；支持铺满父容器或者固定宽高；该属性的可选值为 整数, px，%"
    },
    "highlight-cell": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "It is only valid when editConfig is configured, whether to highlight the cell border when editing",
      "description_zh": "只对 editConfig 配置时有效，是否在编辑时高亮单元格边框"
    },
    "highlight-current-column": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether you want to highlight the current column",
      "description_zh": "是否要高亮当前列"
    },
    "highlight-current-row": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether you want to highlight the current row",
      "description_zh": "是否要高亮当前行"
    },
    "highlight-hover-column": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Mouse over the column to see if you want to highlight it",
      "description_zh": "鼠标移到列是否要高亮显示"
    },
    "highlight-hover-row": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Mouse over the row to see if you want to highlight it",
      "description_zh": "鼠标移到行是否要高亮显示"
    },
    "is-async-column": {
      "default": "--",
      "value": "",
      "type": "boolean",
      "description": "Set whether the columns of the table are lazy loaded; Whether to enable the asynchronous column function and use it with scrollLoad",
      "description_zh": "设置表格的列是否延迟加载；是否开启异步列功能，配合 scrollLoad 一起使用"
    },
    "is-before-page-change": {
      "default": "--",
      "value": "",
      "type": "boolean",
      "description": "Whether to turn on the pre-processing feature when the page is changed. When the value is true, the page turning operation or changing the page size operation will not take effect immediately, leaving it to the user to process the business logic, and then make it effective or invalid by calling the reserved callback or rollback, see the event before-page-change for details",
      "description_zh": "是否打开页面改变时的前置处理特性。在值为 true 时，翻页操作或者改变页大小操作不会立即生效，留给用户处理业务逻辑，之后通过调用预留的 callback 或者 rollback 使之生效或者失效，详看事件 before-page-change "
    },
    "keyboard-config": {
      "default": "--",
      "value": "",
      "type": "IKeyboardConfig",
      "description": "button configuration items",
      "description_zh": "按键配置项"
    },
    "loading": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Whether the table is loading",
      "description_zh": "表格是否显示加载中"
    },
    "loading-component": {
      "default": "--",
      "value": "",
      "type": "Component",
      "description": "Custom table loading",
      "description_zh": "自定义表格 loading "
    },
    "max-height": {
      "default": "--",
      "value": "",
      "type": "number | string",
      "description": "Set the maximum height of the table content area (excluding the table header and bottom); The optional values for this property are: integer, px,%",
      "description_zh": "设置表格内容区域（不含表格头部，底部）的最大高度；该属性的可选值为：整数, px，%"
    },
    "min-height": {
      "default": "--",
      "value": "",
      "type": "number | string",
      "description": "Sets the minimum height of the table content area (excluding the table header and bottom).",
      "description_zh": "设置表格内容区域（不含表格头部，底部）的最小高度"
    },
    "mouse-config": {
      "default": "--",
      "value": "",
      "type": "IMouseConfig",
      "description": "Mouse configuration items",
      "description_zh": "鼠标配置项"
    },
    "optimization": {
      "default": "--",
      "value": "",
      "type": "IOptimizationConfig",
      "description": "Optimized configuration items for virtual scrolling of tables",
      "description_zh": "表格虚拟滚动的优化配置项"
    },
    "pager": {
      "default": "--",
      "value": "",
      "type": "IPagerConfig",
      "description": "Paginated configuration items",
      "description_zh": "分页配置项"
    },
    "radio-config": {
      "default": "--",
      "value": "",
      "type": "IRadioConfig",
      "description": "A radio box configuration item",
      "description_zh": "单选框配置项"
    },
    "remote-filter": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether all columns use server-side filtering, if set to true, the data will not be processed",
      "description_zh": "所有列是否使用服务端筛选，如果设置为 true 则不会对数据进行处理"
    },
    "remote-sort": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether to sort all data on the server. Defaults to false and does not do server-side sorting",
      "description_zh": "是否将服务端的全部数据进行排序。默认为 false 不进行服务端排序"
    },
    "render-empty": {
      "default": "--",
      "value": "",
      "type": "()=> string | VNode",
      "description": "Empty data rendering",
      "description_zh": "空数据渲染"
    },
    "resizable": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Sets whether to allow column widths to be adjusted",
      "description_zh": "设置是否允许调整列宽"
    },
    "row-class-name": {
      "default": "--",
      "value": "",
      "type": "string | (args: IClassNameArgs) => string",
      "description": "Customize the table row class name, which is used to customize the row style of the table. You can set the string class name directly, or you can use a function",
      "description_zh": "自定义表格行类名，用于自定义表格的行样式的场景。可以直接设置字符串类名，也可以是用函数"
    },
    "row-group": {
      "default": "--",
      "value": "",
      "type": "IRowGroup",
      "description": "The row-group attribute can be used to configure row grouping, and row grouping will display columns with the same value in groups",
      "description_zh": "row-group 属性可以配置行分组，行分组会将具有相同值的列进行分组展示"
    },
    "row-id": {
      "default": "_RID",
      "value": "",
      "type": "string",
      "description": "Customize the field name of the unique primary key of the row data (the row data must have a unique primary key, which is automatically generated by default)",
      "description_zh": "自定义行数据唯一主键的字段名（行数据必须要有唯一主键，默认自动生成）"
    },
    "row-span": {
      "default": "--",
      "value": "",
      "type": "{ field: string }[]",
      "description": "Sets row merge, which is only available for normal tables and cannot be used in conjunction with tree-config",
      "description_zh": "设置行合并,该属性仅适用于普通表格，不可与 tree-config 同时使用"
    },
    "save-data": {
      "default": "--",
      "value": "",
      "type": "IDataHandler",
      "description": "The method of saving data on the server",
      "description_zh": "服务端数据保存方法"
    },
    "select-config": {
      "default": "--",
      "value": "",
      "type": "ISelectConfig",
      "description": "check box configuration item",
      "description_zh": "复选框配置项"
    },
    "seq-serial": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Set whether the line number is sequential, which is valid when pagination is enabled, and seqSerial is valid when showSeq is true",
      "description_zh": "设置行序号是否连续，开启分页时有效, seqSerial 当 showSeq 为 true 时有效"
    },
    "show-footer": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether to display the bottom total",
      "description_zh": "是否显示表尾合计"
    },
    "show-header": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Whether to display the header",
      "description_zh": "是否显示表头"
    },
    "show-header-overflow": {
      "default": "--",
      "value": "",
      "type": "boolean / ellipsis / tooltip / title",
      "description": "Set the header to display an ellipsis when all the contents are too long; The optional values for this property are ellipsis (which shows only the ellipsis), title (and appears as the native title), tooltip (and appears as a tooltip hint)",
      "description_zh": "设置表头所有内容过长时显示为省略号；该属性的可选值为 ellipsis（只显示省略号）,title（并且显示为原生 title）,tooltip（并且显示为 tooltip 提示）"
    },
    "show-overflow": {
      "default": "--",
      "value": "",
      "type": "boolean / ellipsis / tooltip / title",
      "description": "Set all content to be displayed as ellipsis when it is too long (if it is a fixed column, it is recommended to set this value to improve the rendering speed); The optional values for this property are ellipsis (which shows only the ellipsis), title (and appears as the native title), tooltip (and appears as a tooltip hint)",
      "description_zh": "设置所有内容过长时显示为省略号（如果是固定列建议设置该值，提升渲染速度）；该属性的可选值为 ellipsis（只显示省略号）,title（并且显示为原生 title）,tooltip（并且显示为 tooltip 提示）"
    },
    "show-save-msg": {
      "default": "--",
      "value": "",
      "type": "boolean",
      "description": "Whether to prompt when there is unsaved data when switching pagination",
      "description_zh": "切换分页时有未保存的数据时是否进行提示"
    },
    "size": {
      "default": "--",
      "value": "",
      "type": "medium / small / mini",
      "description": "The size of the table",
      "description_zh": "表格的尺寸"
    },
    "sort-config": {
      "default": "--",
      "value": "",
      "type": "ISortConfig",
      "description": "Sort configuration items",
      "description_zh": "排序配置项"
    },
    "sort-method": {
      "default": "--",
      "value": "",
      "type": "(row1: IRow, row2: IRow)=> boolean",
      "description": "Customize the sorting method of all columns, and when the sorting is triggered, the function will be called to return the sorted result. Custom sorting method, similar to the native sort sorting",
      "description_zh": "自定义所有列的排序方法，当触发排序时会调用该函数返回排序后的结果；自定义排序方法，类似原生的sort排序"
    },
    "sortable": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Specify whether to allow column data sorting. Defaults to true to sortable",
      "description_zh": "设置是否允许列数据排序。默认为 true 可排序"
    },
    "span-method": {
      "default": "{ rowspan: 1, colspan: 1 }",
      "value": "",
      "type": "(args: ISpanMethodArgs) => { rowspan: number, colspan: number }",
      "description": "Merge rows or columns, and the function returns the calculated value",
      "description_zh": "合并行或列，该函数返回计算后的值"
    },
    ":start-index": {
      "default": "0",
      "value": "",
      "type": "number",
      "description": "Valid only for columns with type=index, the starting value of the dynamic index",
      "description_zh": "只对 type=index 的列有效，动态索引的起始值"
    },
    "stripe": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether it has zebra stripes or not",
      "description_zh": "是否带有斑马纹"
    },
    "summary-config": {
      "default": "--",
      "value": "",
      "type": "ISummaryConfig",
      "description": "The configuration item of the table statistics function",
      "description_zh": "表格统计功能配置项"
    },
    "sync-resize": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Responsive follow of a property (may be used in scenes where a property is used to control the show/hide toggle)",
      "description_zh": "响应式跟随某个属性（对于通过某个属性来控制显示/隐藏切换的场景可能会用到）"
    },
    "toolbar": {
      "default": "--",
      "value": "",
      "type": "IToolbarConfig",
      "description": "Toolbar configuration",
      "description_zh": "工具栏配置"
    },
    "tooltip-config": {
      "default": "--",
      "value": "",
      "type": "IToolTipConfig",
      "description": "For details about the built-in tooltip configuration item of Grid, see Tooltip Properties",
      "description_zh": "Grid 内置 tooltip 配置项，请参考 Tooltip 组件属性说明"
    },
    "tree-config": {
      "default": "--",
      "value": "",
      "type": "ITreeConfig",
      "description": "Tree structure configuration items",
      "description_zh": "树形结构配置项"
    },
    "valid-config": {
      "default": "--",
      "value": "",
      "type": "IValidConfig",
      "description": "Verify the configuration item",
      "description_zh": "校验配置项"
    }
  },
  "link": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
  "link_zh": "https://opentiny.design/tiny-vue/zh-CN/smb-theme/components/grid",
  "typeDetail": {
    "IRow": "interface IRow {\n  // 表格行数据\n  [filed: string]: any\n}",
    "IColumnConfig": "interface IColumnConfig {\n  type: 'index' | 'radio' | 'checkbox'\n  id: string\n  prop: string\n  rules: IValidRules\n  required: boolean\n  property: string\n  title: string\n  label: string\n  width: string | number\n  minWidth: string | number\n  resizable: boolean\n  fixed: boolean\n  align: 'left' | 'center' | 'right'\n  headerAlign: 'left' | 'center' | 'right'\n  footerAlign: 'left' | 'center' | 'right'\n  showOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showHeaderOverflow: boolean | 'ellipsis' | 'tooltip' | 'title'\n  showTip: boolean\n  showHeaderTip: boolean\n  className: string\n  headerClassName: string\n  footerClassName: string\n}",
    "IPagerConfig": "interface IPagerConfig {\n  component?: Component\n  attrs: {\n    currentPage: number\n    pageSize: number\n    pageSizes: number[]\n    total: number\n    // 分页组件布局默认值：'total, prev, pager, next, jumper, sizes'\n    layout: string\n  }\n}",
    "IDataHandler": "interface IDataHandler {\n  api: ()=> Promise\n}",
    "IRowGroup": "interface IRowGroup {\n  // 列标识符，行分组会将具有相同值的列进行分组展示\n  field: string\n}",
    "IToolbarConfig": "interface IToolbarConfig {\n  component: GridToolbar\n  buttons: {\n    code: string\n    name: string\n  }[]\n}",
    "IToolTipConfig": "interface IToolTipConfig {\n  placement?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end'\n  visibleArrow?: boolean\n  enterable?: boolean\n  type?: 'normal' | 'warning' | 'error' | 'info' | 'success'\n  effect?: 'dark' | 'light'\n  // 自定义提示内容\n  contentMethod?: ()=> string | VNode\n}",
    "IContextMenuConfig": "interface IMenuOptions {\n  code: string\n  name: string\n  visible?: boolean\n  disabled?: boolean\n}\n\ninterface IContextMenuConfig {\n  body?: { \n    options: IMenuOptions\n  }\n  footer?: { \n    options: IMenuOptions\n  }\n  visibleMethod?: ()=> boolean\n}",
    "IValidRules": "interface IValidRules {\n [filed:string]: { \n  type?: string\n  required?: boolean\n  validator?: () => boolean\n  message?: string\n  min?: number\n  max?: number\n }\n}[]",
    "IExpandConfig": "interface IExpandConfig {\n  // 默认展开所有行\n  expandAll?: boolean \n  // 触发方式 default（点击按钮触发）,cell（点击单元格触发）,row（点击行触发）\n  trigger?: 'default' | 'row' | cell\n  // 默认展开指定行（需要有 row-id）\n  expandRowKeys?: string[]\n  // 对于同一级的节点，每次只能展开一个\n  accordion?: boolean\n  // 控制是否渲染展开行\n  activeMethod?:({row: IRow})=> boolean\n  // 配置是否显示展开图标\n  showIcon?: boolean \n}",
    "IOptimizationConfig": "interface IOptimizationConfig {\n  animat: boolean\n  delayHover: number\n  scrollX: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 X 虚拟滚动，必须固定所有列宽，否则无法兼容）默认100\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number\n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数\n    vSize?: number\n  }\n  scrollY: {\n    // 指定大于多少范围时自动启动虚拟滚动（启用 Y 虚拟滚动，必须固定所有行高，否则无法兼容）默认500\n    gt?: number\n    // 当剩余数据少于指定范围时触发重新渲染 默认自动计算\n    oSize?: number \n    // 每次渲染条数 默认自动计算\n    rSize?: number\n    // 指定可视区域条数 默认自动计算\n    vSize?: number \n    // 指定行高 默认自动计算\n    rHeight?: number \n    // 自动适配最优的渲染方式 默认true\n    adaptive?: boolean \n  }\n}",
    "IKeyboardConfig": "interface IKeyboardConfig {\n  // 启用方向键功能\n  isArrow?: boolean \n  isDel?: boolean\n  isTab?: boolean \n  isEdit?: boolean\n}",
    "IMouseConfig": "interface IMouseConfig {\n  // 是否开启左键选中单元格功能（只对 editConfig.mode=cell 有效），默认为 false\n  selected: boolean \n}",
    "IRadioConfig": "interface IRadioConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row' \n  // 单选框显示的字段名，可以直接显示在单选框中\n  labelField?: string |\n  // 默认选中指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKey?: string\n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 Radio 是否可以选中\n  checkMethod?: ()=> boolean\n}",
    "ISelectConfig": "interface ISelectConfig {\n  // 触发选中的方式，可选项包括 cell（单击图标所在单元格触发） / row（点击行触发），默认点击图标触发\n  trigger?: 'cell' | 'row'\n  // 复选框显示的字段名，可以直接显示在复选框中\n  labelField?: string\n  // 默认勾选开指定行（只会在初始化时被触发一次，需要有 row-id）\n  checkRowKeys?: string[] \n  // 是否允许选中的方法，该方法的返回值用来决定这一行的 checkbox 是否可以勾选\n  checkMethod?: ()=> boolean \n  // 默认勾选所有（只会在初始化时被触发一次）}\n  checkAll?: boolean\n  // 是否显示全选按钮（如果 checkStrictly=true 则默认为 false）\n  showHeader?: boolean \n  // 是否严格的遵循父子不互相关联的做法\n  checkStrictly?: boolean\n  // 翻页操作是否保留历史选择数据\n  reserve?: boolean\n}",
    "ISortConfig": "interface ISortConfig {\n  // 排序触发方式，可配置为 cell（点击头部单元格触发排序），不配置时默认为点击上下箭头触发排序\n  trigger?: 'cell'\n}",
    "ITreeConfig": "interface ITreeConfig {\n  // 展开子级触发方式：'default'(点击按钮触发)；'cell'(点击单元格触发)；'row'(点击行触发)\n  trigger?: 'default' | 'cell' | 'row'\n  // 子级索引是否按数字递增显示：true(子级索引按数字递增显示，父级1，子级2)；false(子级索引在父级索引基础上增加，父级1，子级1.1)\n  ordered?: boolean\n  // 控制水平缩进距离，默认 16，单位 px\n  indent?: number\n  // 指定子级数据的字段名\n  children?: string\n  // 是否展开所有行\n  expandAll?: boolean\n  // 默认展开所给数组中的指定行，需要有row-id，可以由行的'_RID'属性获取\n  expandRowKeys?: string[]\n  // 对于同一级的多个子节点，是否只能同时展开一个子节点\n  accordion?: boolean\n}",
    "IValidConfig": "interface IValidConfig {\n  // 校验提示类型，'inline'(内置提示)；'tooltip'(tooltip文字提示)\n  message?: 'inline' | 'tooltip'\n}",
    "ISummaryConfig": "interface ISummaryConfig {\n  // 统计字段名 \n  fields: string[]\n  // 小数点后保留的小数位\n  fraction?: boolean\n  // 是否截断，默认为四舍五入，不截断\n  truncate?: boolean\n  // 统计显示的文本\n   text?: string\n}",
    "IScrollLoadConfig": "interface IScrollLoadConfig {\n  // 是否连续\n  isInfinity: boolean\n  // 每次加载多少条\n  pageSize: number\n}",
    "IEventsConfig": "interface IEventsConfig {\n  [field: string]: ()=> void\n}",
    "IDropConfig": "interface IDropConfig {\n  // sortablejs 插件\n  plugin: Sortable\n  // 开启行拖拽\n  row: boolean\n  // 开启列拖拽\n  column: boolean\n  // 拖拽前函数，返回 false 取消拖动\n  onBeforeMove?: ()=> boolean\n  // 拖拽触发源选择器一般是class类名\n  trigger?: string\n  // 根据行的类名来控制是否可以拖动\n  filter?: string\n  // 如果变动了树层级，可以指定是否需要刷新数据\n  refresh?: boolean\n  }",
    "IEditConfig": "interface IEditConfig {\n  // 激活触发方式\n  trigger: 'click' | 'dblclick' | 'manual'\n  // 激活类型单元格激活或者行\n  mode: 'cell' | 'row'\n  // 是否显示状态\n  showStatus?: boolean\n  // 自定义编辑规则，返回true可以编辑返回false则禁止编辑\n  activeMethod?: ({row: IRow, column: IColumnConfig})=> boolean\n}",
    "IRecordset": "interface IRecordset {\n  insertRecords: IRow[]\n  removeRecords: IRow[]\n  updateRecords: IRow[]\n}",
    "IPageChangeArgs": "interface IPageChangeArgs { \n  // table组件vue实例\n  $grid: Component\n  // 当前页码\n  currentPage: number\n  //当前分页组件布局信息 'total, prev, pager, next, jumper, sizes'\n  layout: string\n  // 当前每页显示条数\n  pageSize: number\n  //可切换的每页条数\n  pageSizes: number[] \n  //总数据条数\n  total: number \n}",
    "IBeforePageChangeArgs": "interface IBeforePageChangeArgs { \n  //新页码\n  newPage: number\n  //新的分页大小 \n  newPageSize: number\n  //当前页码\n  currentPage: number\n  //当前的页大小\n  currentPageSize: number\n  //生效回调\n  callback: ()=> void\n  //失效回调\n  rollback: ()=> void\n}",
    "IToolbarButtonClickArgs": "interface IToolbarButtonClickArgs { \n  //表格组件实例对象信息 \n  $grid: Component\n  //按钮信息对象 \n  button: {\n    code: string\n    name: string\n  }[]\n  // 按钮功能类型\n  code: string\n}",
    "ICellClickArgs": "interface ICellClickArgs {\n  // 当前行\n  row: IRow,\n  // 当前行的下标\n  rowIndex: number\n  // 当前列\n  column: IColumnConfig\n  // 当前列的下标\n  columnIndex: number\n}",
    "ICellContextMenuArgs": "interface ICellContextMenuArgs {\n  // 当前行\n  row: IRow\n}",
    "ICellArgs": "interface ICellArgs {\n  //当前行\n  row: IRow\n  //当前行的下标\n  rowIndex: number\n  // 当前列 \n  column: IColumnConfig\n  // 当前列的下标 \n  columnIndex: number\n}",
    "ICurrentChangeArgs": "interface ICurrentChangeArgs {\n  // 当前行\n  row: IRow\n}",
    "IEditActivedArgs": "interface IEditActivedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
    "IEditClosedArgs": "interface IEditClosedArgs {\n  // 当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
    "IEditDisabledArgs": "interface IEditDisabledArgs {\n  //当前行\n  row: IRow\n  // 当前列 \n  column: IColumnConfig\n}",
    "IFilterChangeArgs": "interface IFilterChangeArgs {\n  //表格的信息对象\n  $table: Component\n  //过滤列的过滤数据信息\n  filters: object\n}",
    "IFooterCellClickArgs": "interface IFooterCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点 \n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
    "IContextMenuArgs": "interface IContextMenuArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 配置清除等功能信息\n  options: object[]\n  // 表格区域类型\n  type: 'header' | 'footer' | 'body'\n}",
    "IFooterCellDblClickArgs": "interface IFooterCellDblClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 当前单元格节点\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n}",
    "IHeaderCellClickArgs": "interface IHeaderCellClickArgs {\n  $columnIndex: number\n  $rowIndex: number\n  // table组件vue实例\n  $table: Component\n  // 点击表头单元格\n  cell: HTMLElement\n  // 当前列信息\n  column: IColumnConfig\n  columnIndex: number\n  // 当前点击节点过滤标识\n  triggerFilter: boolean\n  // 当前点击节点排序标识\n  triggerSort: boolean\n}",
    "IHeaderCellDblClickArgs": "interface IHeaderCellDblClickArgs {\n  // 列数据\n  column: IColumnConfig  \n  // 列索引\n  columnIndex: number\n  // table组件 vue实例 \n  $table: Component\n  // 点击的单元格dom\n  cell: HTMLElement\n}",
    "IResizableChangeArgs": "interface IResizableChangeArgs {\n  // table组件的vue 实例 \n  $table: Component,\n  // 列配置信息 \n  column: IColumnConfig \n  // 拖动列的索引\n  columnIndex: number\n  // 是否固定列\n  fixed: boolean\n}",
    "IScrollArgs": "interface IScrollArgs {\n  // 表格实例对象信息\n  $table: Component\n  fixed: boolean\n  // X轴滚动\n  isX: boolean\n  // Y轴滚动\n  isY: true\n  // X轴滚动距离\n  scrollLeft: number\n  // Y轴滚动距离\n  scrollTop: number\n  type: 'body' | 'header' | 'footer'\n}",
    "ISelectAllArgs": "interface ISelectAllArgs {\n  $columnIndex: number\n  $rowIndex: number\n  $seq: string\n  // 表格实例对象信息\n  $table: Component \n  // 勾选状态\n  checked: boolean\n  // 列信息\n  column: IColumnConfig\n  // 列下标\n  columnIndex: number\n  // 表格数据\n  data: IRow[]\n  fixed: boolean\n  isHidden: boolean\n  level: number\n  // 勾选项的行数据信息\n  row: IRow\n  // 勾选项的行下标\n  rowIndex: number\n  // 选中的数据\n  selection: IRow[]\n  seq: number\n}",
    "IToggleExpandChangeArgs": "interface IToggleExpandChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
    "IToggleTreeChangeArgs": "interface IToggleTreeChangeArgs { \n  // 表格实例对象信息\n  $table: Component,\n  //点击展开行的数据信息对象\n  row: IRow\n  // 点击展开行的下标 \n  rowIndex: number\n}",
    "IValidErrorArgs": "interface IValidErrorArgs { \n  // 校验的单元格信息对象\n  cell: Cell\n  //校验单元格所在列的列配置信息对象\n  column: IColumnConfig\n  //校验单元格所在行的信息对象\n  row: IRow\n  // 校验规则信息对象 \n  rule: object\n}",
    "ISortChangeArgs": "interface ISortChangeArgs { \n  // 表格实例对象信息\n  $grid: Component\n  // 列信息\n  column: IColumnConfig\n  // 排序的字段名\n  field: string \n  // 排序类型升序或降序\n  order: 'asc' | 'desc' \n  prop: string\n  property: string\n}",
    "IClassNameArgs": "interface IClassNameArgs {\n  seq: number\n  row: IRow\n  rowIndex: number\n  $rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n  $columnIndex: number\n}",
    "IIndexMethodArgs": "interface IIndexMethodArgs {\n  row: IRow\n  rowIndex: number\n  column: IColumnConfig\n  columnIndex: number\n}",
    "IFormatConfig": "interface IFormatConfig {\n  // 列数据源\n  data: IColumnConfig[] \n  // 内置渲染器类型，与 format-text 属性取值相同\n  type: 'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate'\n  // 配置为 true 后，支持动态修改 data 的数据。还可以配置为对象，配置为对象时，对象中可以配置 splitConfig.enabled（是否启用分隔配置）、splitConfig.valueSplit（指定 value 值的分隔符）、splitConfig.textSplit（指定 text 的分隔符）、fetch（列数据异步渲染，请求数据）\n  async: true, \n  // 单元格显示内容的映射\n  label: string\n  // 单元格取值的映射\n  value: string\n}",
    "IButtonClick": "interface IButtonClick { \n  // 表格组件实例对象信息\n  $grid: Component \n  // 按钮列表信息对象   \n  button: {\n    code: string\n    name: string\n  }[]\n   // 按钮类型 \n   code: string\n  }",
    "ISettingConfigs": "interface ISettingConfigs {\n  sortType: 'page' | 'all'\n  pageSize: number\n  columns: {\n    property: string\n    order: 'asc' | 'desc' | null \n    visible: boolean\n    sortable: boolean\n  }[]\n}",
    "ISpanMethodArgs": "interface ISpanMethodArgs {\n  // 行标\n  $rowIndex: number\n  // 列数据  \n  column: IColumnConfig\n  // 列下标 \n  columnIndex: number\n  // 一个数组，保存了当前合并和计算的数据\n  data: (string | number | null)[][]\n}",
    "IExportCsvOptions": "interface IExportCsvOptions {\n  filename: string\n  original: boolean\n  isHeader: boolean\n  data: IRow[]\n}",
    "IEditorConfig": "interface IEditorConfig {\n  // 内置组件名称或者自定义组件实例\n  component: 'input' | 'select' | Component\n  // 传递给组件的事件集合\n  events?: {\n    [event]: ()=> void\n  }\n  // 传递给编辑器组件的属性集合\n  attrs?: {\n    [prop]: any\n  }\n  // select 内置组件独有的下拉数据配置项\n  options?: object[]\n}",
    "IFilterConfig": "interface IFilterConfig {\n  // 设置在显示枚举选项功能是否为多选, 仅在 enumable:true 下有效\n  multi: boolean\n  // 设置在过滤面板中显示枚举选项\n  enumable: boolean\n  // 设置在过滤面板中显示默认的筛选条件\n  defaultFilter: boolean\n  // 设置在过滤面板中显示输入筛选的项\n  inputFilter: boolean\n  // 设置在显示枚举选项功能(enumable)下制定静态数据源，也可以是函数返回一个Promise对象\n  values: {\n    // 设置枚举数据的显示值属性字段， 默认'label'\n    label: string\n    // 设置枚举数据的实际值属性字段， 默认'value'\n    value: string \n  }[] | ()=> Promise\n}",
    "IOPConfig": "interface IOPConfig {\n  editConfig?: IEditConfig\n  pagerConfig?: IPagerConfig\n  columns: IColumnConfig[]\n  data: IRow[]\n}",
    "IFormatText": "'money' | 'enum' | 'select' | 'number' | 'integer' | 'filesize' | 'date' | 'dateTime' | 'longDateTime' | 'time' | 'longTime' | 'yearMonth' | 'ellipsis' | 'rate' | 'boole' | (params)=> string",
    "IToolbarSetting": "interface IToolbarSetting {\n        remote?: boolean\n        storage?: string\n        sortable?: Sortable \n      }"
  },
  "events": [
    {
      "name": "before-page-change",
      "description": "It is triggered when the page is changed when the page is opened, and when the page is turned or the page size is changed",
      "description_zh": "在打开页面改变时的前置处理特性，并且进行翻页操作或者改变页大小操作时触发",
      "params": "(args: IBeforePageChangeArgs)=> void",
      "value": ""
    },
    {
      "name": "cancel-page-change",
      "description": "When there is unsaved data when switching pagination, the prompt box determines the button event",
      "description_zh": "切换分页时有未保存的数据时，提示框确定按钮事件",
      "params": "($grid: Component)=> void",
      "value": ""
    },
    {
      "name": "cell-click",
      "description": "The event is triggered when a cell is clicked",
      "description_zh": "单元格被点击时会触发该事件",
      "params": "(args: ICellClickArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "cell-context-menu",
      "description": "This event is triggered when a cell is right-clicked",
      "description_zh": "单元格被鼠标右键点击时触发该事件",
      "params": "(args: ICellContextMenuArgs)=> void",
      "value": ""
    },
    {
      "name": "cell-dblclick",
      "description": "The event is triggered when a cell is double-clicked",
      "description_zh": "单元格被双击时会触发该事件",
      "params": "(args: ICellArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "cell-mouseenter",
      "description": "The event is triggered when a cell hover enters",
      "description_zh": "当单元格 hover 进入时会触发该事件",
      "params": "(args: ICellArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "cell-mouseleave",
      "description": "The event is triggered when a cell hover exits",
      "description_zh": "当单元格 hover 退出时会触发该事件",
      "params": "(args: ICellArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "context-menu-click",
      "description": "Valid only when context-menu is configured, and will be triggered when the shortcut menu is clicked",
      "description_zh": "只对 context-menu 配置时有效，当点击快捷菜单时会触发该事件",
      "params": "(args: IContextMenuArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "current-change",
      "description": "Valid only for highlightCurrentRow, an event that fires when a row is manually selected and the value changes",
      "description_zh": "只对 highlightCurrentRow 有效，当手动选中行并且值发生改变时触发的事件",
      "params": "(args: ICurrentChangeArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "edit-actived",
      "description": "The event is triggered when a cell is active for editing",
      "description_zh": "单元格被激活编辑时会触发该事件",
      "params": "(args: IEditActivedArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "edit-closed",
      "description": "This event is triggered when a cell is closed while editing is in the state",
      "description_zh": "单元格编辑状态下被关闭时会触发该事件",
      "params": "(args: IEditClosedArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "edit-disabled",
      "description": "The event is triggered when a cell is active and if it is disabled",
      "description_zh": "当单元格激活时如果是禁用状态时会触发该事件",
      "params": "(args: IEditDisabledArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "filter-change",
      "description": "The event is triggered when the filter conditions change",
      "description_zh": "当筛选条件发生变化时会触发该事件",
      "params": "(args: IFilterChangeArgs)=> void",
      "value": ""
    },
    {
      "name": "footer-cell-click",
      "description": "The event is triggered when a footer cell is clicked",
      "description_zh": "表尾单元格被点击时会触发该事件",
      "params": "(args: IFooterCellClickArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "footer-cell-context-menu",
      "description": "This event is triggered when a footer cell is right-clicked",
      "description_zh": "表尾单元格被鼠标右键点击时触发该事件",
      "params": "(args: IContextMenuArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "footer-cell-dblclick",
      "description": "This event is triggered when a footer cell is double-clicked",
      "description_zh": "表尾单元格被双击时会触发该事件",
      "params": "(args: IFooterCellDblClickArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "fullscreen",
      "description": "The time when triggered when fullscreen is fullscreen or when fullscreen is turned off",
      "description_zh": "全屏时或关闭全屏时触发的时间",
      "params": "()=> void",
      "value": ""
    },
    {
      "name": "header-cell-click",
      "description": "This event is triggered when a header cell is clicked",
      "description_zh": "表头单元格被点击时会触发该事件",
      "params": "(args: IHeaderCellClickArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "header-cell-context-menu",
      "description": "This event is triggered when a header cell is right-clicked",
      "description_zh": "表头单元格被鼠标右键点击时触发该事件",
      "params": "(args: IContextMenuArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "header-cell-dblclick",
      "description": "This event is triggered when a header cell is double-clicked",
      "description_zh": "表头单元格被双击时会触发该事件",
      "params": "(args: IHeaderCellDblClickArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "page-change",
      "description": "This event is only valid when the pager-config configuration is configured, and is triggered when the pagination changes",
      "description_zh": "只对 pager-config 配置时有效，分页发生改变时会触发该事件 ",
      "params": "(args: IPageChangeArgs)=> void",
      "value": ""
    },
    {
      "name": "radio-change",
      "description": "Valid only for type=radio events that are triggered when manually checked and the value changes",
      "description_zh": "只对 type=radio 有效，当手动勾选并且值发生改变时触发的事件",
      "params": "($table: Component, event: Event)=> void",
      "value": ""
    },
    {
      "name": "resizable-change",
      "description": "This event is triggered when the column width drag changes",
      "description_zh": "当列宽拖动发生变化时会触发该事件",
      "params": "(args: IResizableChangeArgs)=> void",
      "value": ""
    },
    {
      "name": "scroll",
      "description": "This event is triggered when the table is scrolling",
      "description_zh": "表格滚动时会触发该事件",
      "params": "(args: IScrollArgs)=> void",
      "value": ""
    },
    {
      "name": "select-all",
      "description": "Valid only for type=selection, which is triggered when you manually check all selections",
      "description_zh": "只对 type=selection 有效，当手动勾选全选时触发的事件",
      "params": "(args: ISelectAllArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "select-change",
      "description": "Valid only for type=selection, an event that is triggered when the value is manually checked and the value is changed",
      "description_zh": "只对 type=selection 有效，当手动勾选并且值发生改变时触发的事件",
      "params": "(args: ISelectChangeArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "sort-change",
      "description": "Click on the column header to trigger the event before data sorting",
      "description_zh": "点击列头，执行数据排序前触发的事件",
      "params": "(args: ISortChangeArgs)=> void",
      "value": ""
    },
    {
      "name": "toggle-expand-change",
      "description": "This event is triggered when a row is expanded or collapsed",
      "description_zh": "当行展开或收起时会触发该事件",
      "params": "(args: IToggleExpandChangeArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "toggle-tree-change",
      "description": "This event is triggered when a tree node is expanded or collapsed",
      "description_zh": "当树节点展开或收起时会触发该事件",
      "params": "(args: IToggleTreeChangeArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "toolbar-button-click",
      "description": "Valid only when toolbar.buttons is configured, and triggers the event when a toolbar button is clicked",
      "description_zh": "只对 toolbar.buttons 配置时有效，当工具栏的按钮被点击时会后触发该事件",
      "params": "(args: IToolbarButtonClickArgs, event: Event)=> void",
      "value": ""
    },
    {
      "name": "valid-error",
      "description": "This event is triggered when the data verification fails",
      "description_zh": "当数据校验不通过时会触发该事件",
      "params": "(args: IValidErrorArgs)=> void",
      "value": ""
    }
  ],
  "methods": [
    {
      "name": "default",
      "description": "Default Slots (Table Columns)",
      "description_zh": "默认插槽（表格列）",
      "value": ""
    },
    {
      "name": "empty",
      "description": "The text content that is displayed when the data is empty",
      "description_zh": "空数据时显示的文本内容",
      "value": ""
    },
    {
      "name": "toolbar",
      "description": "Toolbar, (contains: zoom, personalization, refresh table, custom buttons)",
      "description_zh": "工具栏，（包含：缩放、个性化、刷新表格、自定义按钮)",
      "value": ""
    }
  ],
  "slots": [
    {
      "name": "default",
      "description": "Default Slots (Table Columns)",
      "description_zh": "默认插槽（表格列）"
    },
    {
      "name": "empty",
      "description": "The text content that is displayed when the data is empty",
      "description_zh": "空数据时显示的文本内容"
    },
    {
      "name": "toolbar",
      "description": "Toolbar, (contains: zoom, personalization, refresh table, custom buttons)",
      "description_zh": "工具栏，（包含：缩放、个性化、刷新表格、自定义按钮)"
    }
  ],
  "filename": "Grid",
  "description": "表格组件，提供了非常强大数据表格功能，在 Grid 可以展示数据列表，可以对数据列表进行选择、编辑等。",
  "description_zh": "表格组件，提供了非常强大数据表格功能，在 Grid 可以展示数据列表，可以对数据列表进行选择、编辑等。"
}
